
SYMBOLS {
    __STACKSIZE__: type = weak, value = $0300; # 3 pages stack
}

MEMORY {
    ZP:     file = "", start = $0002, size = $001A, type = rw, define = yes;

    # INES Cartridge Header
    HEADER: file = %O, start = $0000, size = $0010, fill = yes;

    # 8 x 8K PRG Banks for MMC5 PRG Mode 0
    PRG0:   file = %O, start = $8000, size = $2000, fill = yes, define = yes;
    PRG1:   file = %O, start = $A000, size = $2000, fill = yes, define = yes;
    PRG2:   file = %O, start = $C000, size = $2000, fill = yes, define = yes;
    PRG3:   file = %O, start = $E000, size = $1FFA, fill = yes, define = yes;
    # Hardware Vectors at End of PRG3
    VECTORS: file = %O, start = $FFFA, size = $0006, fill = yes;


    # CHR ROM (64KB)
    CHR:    file = %O, start = $0000, size = $10000, fill = yes;

    # standard 2k SRAM (-zeropage)
    SRAM:   file = "", start = $0500, size = __STACKSIZE__, define = yes;

    # additional 8K SRAM Bank (WRAM)
    RAM:    file = "", start = $6000, size = $2000, define = yes;
}

SEGMENTS {
    ZEROPAGE: load = ZP,        type = zp;
    HEADER:   load = HEADER,    type = ro,  align = $10;
    STARTUP:  load = PRG0,      type = ro,  define   = yes;
    LOWCODE:  load = PRG0,      type = ro,  optional = yes;
    ONCE:     load = PRG0,      type = ro,  optional = yes;
    CODE0:    load = PRG0,      type = ro,  define = yes;
    CODE1:    load = PRG1,      type = ro,  define = yes;
    CODE2:    load = PRG2,      type = ro,  define = yes;
    CODE3:    load = PRG3,      type = ro,  define = yes;
    RODATA:   load = PRG3,      type = ro,  define   = yes;
    DATA:     load = PRG3,      run = RAM,  type = rw,  define   = yes;
    VECTORS:  load = VECTORS,   type = ro,  define = yes;
    CHARS:    load = CHR,       type = rw,  define = yes;
    BSS:      load = RAM,       type = bss, define   = yes;
}
